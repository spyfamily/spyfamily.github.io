<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>歌手推荐目录</title>
      <link href="/2022/04/19/%E6%AD%8C%E6%89%8B%E6%8E%A8%E8%8D%90%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/04/19/%E6%AD%8C%E6%89%8B%E6%8E%A8%E8%8D%90%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="歌手推荐目录"><a href="#歌手推荐目录" class="headerlink" title="歌手推荐目录"></a>歌手推荐目录</h1><details class="toggle" ><summary class="toggle-button" style="">更新日志</summary><div class="toggle-content"><p>2022-04-20</p><ul><li>日文歌手<ul><li>2.fhána (ファナ) 乐队</li><li>3.Mili (ミリー) 乐队</li><li>4.MYTH &amp; ROID 乐队</li></ul></li></ul><p>2022-04-19</p><ul><li>日文歌手<ul><li>1.RADWIMPS乐队</li></ul></li></ul></div></details><div class="note info flat"><ol><li>文笔不佳，简单介绍和说说我比较喜欢的作品。</li><li>本来打算推歌的，看了歌单两三千首，沉默了</li><li>这个是真的主观，主要推一些冷门歌手</li><li>日语歌手会比较多，毕竟喜欢的中文歌手几乎都是热门歌手</li></ol></div><h2 id="中文歌手"><a href="#中文歌手" class="headerlink" title="中文歌手"></a>中文歌手</h2><h3 id="等待更新ing…"><a href="#等待更新ing…" class="headerlink" title="等待更新ing…"></a>等待更新ing…</h3><hr><h2 id="日文歌手"><a href="#日文歌手" class="headerlink" title="日文歌手"></a>日文歌手</h2><p><strong>4.MYTH &amp; ROID 乐队（<a href="https://zh.moegirl.org.cn/MYTH_%26_ROID">百科</a>、<a href="https://music.163.com/#/artist?id=1137126">网易云</a>、<a href="https://y.qq.com/n/ryqq/search?w=%20MYTH%20&%20ROID&t=song&remoteplace=txt.yqq.top">QQ音乐</a>）</strong></p><details class="toggle" ><summary class="toggle-button" style="">我喜欢：《VORACITY》、《Paradisus-Paradoxum》、《shadowgraph》</summary><div class="toggle-content"><ul><li>罪域的骨终将为王！（不是最硬的骨终将喂汪？），MYTH &amp; ROID 乐队风格强烈，独树一帜。，参与过《Overload》三季、《从零开始的异世界》、《慎勇》、《不吉波普不笑》的配乐。期待今年与《Overload》的第四季合作！</li><li><strong>摘抄热评：</strong><ul><li>《VORACITY》-网友萌：上季ED是劝降神曲，这季ED听说被人称之为上骨神曲，这季OP名为暴食神曲，曲中拥有迷之笑声，曲中句句歌词都与食物有关从而被现代人的我们称之为暴食神曲，最后一句口号最终被空耳成了：安兹王屠敌，号天子易此！也是非常符合本季故事内容，也是非常有气质的一句，实在是妙！妙！甚妙也！！(•̀⌄•́)</li><li>《shadowgraph》-网友沈军：等这歌火了我们都是元老！！！</li></ul></li></ul></div></details><p><strong>3.Mili (ミリー) 乐队（<a href="https://zh.moegirl.org.cn/Mili">百科</a>、<a href="https://music.163.com/#/artist?id=339594">网易云</a>、<a href="https://y.qq.com/n/ryqq/search?w=mili&t=song&remoteplace=txt.yqq.top">QQ音乐</a>）</strong></p><details class="toggle" ><summary class="toggle-button" style="">我喜欢：《String Theocracy、《Outro》、《Harmonious》</summary><div class="toggle-content"><ul><li>Mili的主唱声音辨识度甚至比上一个fhána (ファナ) 乐队还要高。因为主唱是加拿大籍华人，所以主要歌曲还是英文（那为什么会出现在日文歌手里？？）。从《哥布林杀手》认识，本季新番《处刑少女的生存之道》也有Mili的歌，纯音乐也很好听！</li><li><strong>摘抄热评：</strong><ul><li>《String Theocracy》-网友雨寒：mili的曲风转换确实是个老生常谈的问题，砖一砖二砖三曲风就一直在变，除了一开始听不适应，听久了就好了，好曲子终究是好曲子</li><li>《Outro》-网友骸：中考的铃声，竟然被我找到了（？？？）</li></ul></li></ul></div></details><p><strong>2.fhána (ファナ) 乐队（<a href="https://zh.moegirl.org.cn/Fhana">百科</a>、<a href="https://music.163.com/#/artist?id=19525">网易云</a>、<a href="https://y.qq.com/n/ryqq/singer/00155qJL2Ujczp">QQ音乐</a>）</strong></p><details class="toggle" ><summary class="toggle-button" style="">我喜欢：《ワンダーステラ》（奇迹斯特拉）、《Hello!My World!!》、《青空のラプソディ》（青空的狂想曲）</summary><div class="toggle-content"><ul><li>这次是在《骑士&amp;魔法》（机器人程序员到异世界继续编程的故事）的片头曲《Hello!My World!!》认识的，刚开始也只是放在列表中没有太多的关注。但是独特的声线辨识度太高了，听了几次后，即便你只听过一首她的歌，听到其他她唱的你也会有反应“哦，就是她”的感觉，某一次之后就开始注意乐队了。《小林家的龙女仆》、《魔法少女伊莉雅》等都有参与合作，《ワンダーステラ》（奇迹斯特拉）这首为《魔法少女伊莉雅》创作的是我最喜欢的一首。</li><li><strong>摘抄热评：</strong><ul><li>《ワンダーステラ》-网友只有雪知道：四季还是这首最好听，另外，恕我直言，在坐都是萝莉控（我不是我没有别瞎说）</li><li>《青空のラプソディ》-网友Kadenz.：看番从来不跳op ed 每次都把我萌出一脸血。刚刚九集连看看完。现在还在医院等抢。。。</li></ul></li></ul></div></details><p><strong>1.RADWIMPS 乐队（<a href="https://zh.moegirl.org.cn/RADWIMPS">百科</a>、<a href="https://music.163.com/#/artist?id=21132">网易云</a>、<a href="https://y.qq.com/n/ryqq/singer/000f1b6W1wzyRN">QQ音乐</a>）</strong></p><details class="toggle" ><summary class="toggle-button" style="">我喜欢：《Tummy》、《カイコ》（蚕）、《スパークル》（火花）</summary><div class="toggle-content"><ul><li>第一次听他们的歌是电影《你的名字》，《前前前世》、《なんでもないや》、《梦灯笼》以及《スパークル》（火花）。特别是黄昏之时过后，三叶为了拯救全镇人而奔跑，想要回忆起那个人却只看到手中的“すくだ”的片段和《スパークル》的结合属实被震撼了。后来是《天气之子》（这是新海诚的御用乐队啊！），《天气之子》中我更喜欢他们演奏的纯音乐《御宅訪問》、《晴れゆく空》等等（纯音乐选手出现啦！）。《天气之子》之后从关注歌变成歌手，《Tummy》、《カイコ》（蚕），也就出现在常听列表中，几经更迭仍旧坚挺。</li><li><strong>摘抄热评：</strong><ul><li>《Tummy》-网友.：这是田田写给未来的自己的孩子的一首歌。“我虽然没有小孩，但是比世界上任何一个还未成为父母的人更多地与未来的孩子对话。我这样告诉他，这份心情并没有丝毫的假意。”[摘自《有心论》]</li><li>《カイコ》-宇宙奥德赛：我的野田君，像一把火炬，温暖了一代人的心。声线就像小时候的气球，在空中飞着，在我手里，染着梦寐以求的彩虹色。他唱着，世界在冷漠。还有我。</li></ul></li></ul></div></details><hr><h2 id="纯音乐选手"><a href="#纯音乐选手" class="headerlink" title="纯音乐选手"></a>纯音乐选手</h2><h3 id="等待更新ing…-1"><a href="#等待更新ing…-1" class="headerlink" title="等待更新ing…"></a>等待更新ing…</h3>]]></content>
      
      
      <categories>
          
          <category> 推荐目录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 歌手 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番剧推荐目录</title>
      <link href="/2022/04/17/%E7%95%AA%E5%89%A7%E6%8E%A8%E8%8D%90%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/04/17/%E7%95%AA%E5%89%A7%E6%8E%A8%E8%8D%90%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="番剧推荐目录"><a href="#番剧推荐目录" class="headerlink" title="番剧推荐目录"></a>番剧推荐目录</h1><details class="toggle" style="border: 1px solid #def1de"><summary class="toggle-button" style="background-color: #def1de;">更新日志</summary><div class="toggle-content"><p>2022-04-22 ：《中国唱诗班》、《月色真美》</p></div></details><div class="note info flat"><ol><li>文笔不佳，尽量用一句话介绍。上头了的话可能写的比较多，甚至专门出一期，看心情和时间。</li><li>写在这里的我一般都推荐过别人看，他们也觉得不错我就会往上加（还会加一些他们的感想），当然你也可以给我留言</li><li>一千个人有一千个哈姆雷特，我们觉得好看的你不一定觉得，自己看过最重要</li><li>接上一条，画风这种东西是可以被接受的，刚开始别扭很正常</li><li>接上一条，或许可以接受，也不要勉强自己</li><li>新的一条，支持正版是好事，但希望你不要成为正版受害者，正版受害者的血泪史。</li><li>最后一条，希望我推荐的你们能喜欢</li></ol></div><h2 id="国漫"><a href="#国漫" class="headerlink" title="国漫"></a>国漫</h2><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h3 id="未完结"><a href="#未完结" class="headerlink" title="未完结"></a>未完结</h3></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'></div></div><div class='timeline-item-content'><ol><li><a href="https://www.bilibili.com/bangumi/media/md7312"><strong>中国唱诗班</strong></a><details class="toggle" style="border: 1px solid #e4f3fd"><summary class="toggle-button" style="background-color: #e4f3fd;">标签：励志、原创</summary><div class="toggle-content"><ul><li><strong>简介：</strong>【不定时更新】“中国唱诗班”系列动画由中共嘉定区委宣传部投资出品，已列为嘉定800年重点项目之一。这批动画完全由中国青年团队独立原创手绘，在故事、场景、人物、服饰方面都根据历史文献，进行反复考证修改，以期能在细节上最大程度还原当时历史情景，使影片不仅成为一个有故事的动画作品，更成为一个可以管窥一个时代风貌的绘卷。</li><li><strong>推荐：</strong>《中国唱诗班》从17年10月开播，如简介说的，真就不定期更新。在我心中国漫前五必有其一席之地，冲击前三也未尝不可。虽然作品改了一次名《中国主持词动漫》，但我仍然觉得《中国唱诗班》这个题目更有韵味（ps：叫《中华唱诗班》怎么样？）。是一部值得反复观看的国漫，已经三刷，部分单集更多。</li><li><strong>网友评论：</strong>（这个不好选，建议大家自己去看看，评论区大佬好多）</li></ul><p><img src="https://i0.hdslb.com/bfs/bangumi/image/f43cd147ebb5dacc1c38e5eb7a266276c58292b4.png@338w_450h.webp"></p></div></details></li></ol></div></div></div><h2 id="日漫"><a href="#日漫" class="headerlink" title="日漫"></a>日漫</h2><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h4 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h4></div></div><div class='timeline-item-content'><ol><li><a href="https://www.bilibili.com/bangumi/media/md5989"><strong>《月色真美》：</strong></a> <details class="toggle" style="border: 1px solid #e4f3fd"><summary class="toggle-button" style="background-color: #e4f3fd;">标签：恋爱、校园、治愈、原创</summary><div class="toggle-content"><ul><li><strong>简介：</strong>讲述了茜与小太郎。第一次被分到同班，相识的两人。同班同学、社团伙伴、教师、父母……与周围的关联，自己的成长。在那个一边被变化与不安追着，一边慌慌张张地向前飞奔的季节之中，有着一段稚嫩而又令人眩目的青春校园生活。</li><li><strong>推荐：</strong>青涩而懵懂的青春，单纯而美好的初恋，平凡却又直击人心。（某位不便透露姓名的朋友：我想谈恋爱！！！想找个跑步的女孩纸！！！）</li><li><strong>网友评论-_闪电君_：</strong>简单，干净，细腻，真实，直戳人心中最敏感的部分。没有太多情节的起落，也没有多余的言语对话。平淡的气氛，纯粹的情愫，充满了少男少女的羞涩。</li></ul><p><img src="https://i0.hdslb.com/bfs/bangumi/5ce66f68d54052e3a305524b9b06a76977e974fc.jpg@338w_450h.webp"></p></div></details></li></ol></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 推荐目录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Hexo博客到Github</title>
      <link href="/2022/04/17/%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E5%88%B0Github/"/>
      <url>/2022/04/17/%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E5%88%B0Github/</url>
      
        <content type="html"><![CDATA[<h1 id="部署Hexo博客到Gitee-Pages"><a href="#部署Hexo博客到Gitee-Pages" class="headerlink" title="部署Hexo博客到Gitee Pages"></a>部署Hexo博客到Gitee Pages</h1><details class="toggle" style="border: 1px solid #def1de"><summary class="toggle-button" style="background-color: #def1de;">更新日志</summary><div class="toggle-content"><p>2022-04-18：更新<code>更新日志</code>栏</p></div></details><h2 id="一、Github-Pages"><a href="#一、Github-Pages" class="headerlink" title="一、Github Pages"></a>一、Github Pages</h2><div class="note info flat"><p>1.首次进入Gitee Pages服务页面，会提示开通Gitee Pages服务需要进行实名认证。请准备好身份证正反面照片、手持身份证照片，预计一个工作日即可通过审核。<br>2.推荐一个国产软件<code>HBuilder X</code>,支持Md写作,也可以当作文本编辑器，其他功能大家可以自己研究一下。<a href="https://hx.dcloud.net.cn/">软件文档</a>、<a href="https://www.dcloud.io/hbuilderx.html">官方下载地址</a></p></div><h3 id="1-Github-Pages简单部署"><a href="#1-Github-Pages简单部署" class="headerlink" title="1.Github Pages简单部署"></a>1.Github Pages简单部署</h3><ul><li>Github与Gitee不同之处</li></ul><ul><li>Github不需要实名认证。国内访问慢（或许可以尝试下网上的Github加速方法）。</li><li>想要获取<code>username.github.io</code>访问的方式与Gitee也不同。Gitee只需要把你的<code>username</code>作为仓库名即可，Github则需要使用<code>username.github.io</code>作为仓库名，否则访问网址就会变成<code>username.github.io/仓库名</code>。</li><li>Github不能对仓库文件直接进行操作（如果会命令行另说），不使用命令，想要清空只能删库。Gitee在仓库管理页面提供了清空仓库的功能。</li><li>Github不支持私有库开通Github Pages，Gitee可以支持私有库开通，但是开启 Pages 后所生成的静态资源将会公开（Gitee支持在线生成Hexo与Web IDE，可以直接将Hexo工程文件放在Gitee上，私有库下别人只能看到生成的静态资源。？？！我好像不用在电脑上部署Hexo也可以了！！！白嫖狂喜，直接手机冲）。</li></ul><ul><li>Github Pages开通方式（可以新建一个空仓库，再推送，最后看这里）</li></ul><ul><li>以我为例，在<code>spyfamily.github.io</code>仓库的<code>Setting</code>设置页面找到<code>Pages</code></li><li>如果已经推送过或已经建立仓库分支，<code>Pages</code>页的<code>Source</code>下点击<code>None</code>，选择仓库分支后，点击右边<code>Save</code>。如果没有分支，可以直接选择下面的<code>Choose a theme</code>,随便选择一个默认主题。Github会直接生成Markdown文件和默认分支<code>gh-pages</code>。（这里的分支是后续你要，推送的仓库分支，如果推送的仓库分支和这里不一样，重新进<code>Pages</code>设置改默认分支，或者重新选择推送仓库分支即可。）</li><li>Github Pages不会马上生效，大概1~3分钟即可，官方表示最慢需要20分钟左右。我大Gitee更新完就有了，欸嘿嘿。<h3 id="2-Github-SSH设置-生成SSH，抄了前面部署Gitee的文章"><a href="#2-Github-SSH设置-生成SSH，抄了前面部署Gitee的文章" class="headerlink" title="2.Github SSH设置(生成SSH，抄了前面部署Gitee的文章)"></a>2.Github SSH设置(生成SSH，抄了前面部署Gitee的文章)</h3><blockquote><p><a href="https://gitee.com/help/articles/4181#article-header0">Gitee生成/添加SSH公钥教程</a><br>如果<code>ssh -T git@github.com</code>显示<code>git@github.com: Permission denied (publickey).</code>参考下方解决。<br>这里推荐另外一种生成方式。使用MobaXterm的工具生成SSH公私钥。</p></blockquote></li></ul><ul><li>在MobaXterm的工具栏中找到<code>Tools</code>，在<code>Tools</code>中选择<code>Network</code>部分的<code>MobaKeyGen(SSH key generator)</code></li><li>都默认选项即可，点击按钮<code>Generate</code>开始生成，鼠标在<code>Key</code>框内移动，产生更多随机数，加速生成密钥。</li><li>新建文本文档，命名为<code>xxx.pub</code>。例如：<code>github.pub</code></li><li>MobaKeyGen生成结束后将<code>Public key for pasting into OpenSSH server(~/.ssh/aythorized_keys file):</code>框内的文本复制到<code>github.pub</code>文件内，保存并退出。</li><li>选择菜单栏中的<code>Conversions</code>中的<code>Export OpenSSH key</code>保存私钥,跳出的Warning窗口选择<code>是</code>。将私钥文件保存到公钥文件相同目录下，命名与公钥文件相同即可。例如：<code>github</code></li><li>公私钥生成完毕。按照官方教程添加到Gitee即可。</li><li>添加后在Git Bash输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>若显示<code>git@gitee.com: Permission denied (publickey).</code>，则进入保存密钥的位置，然后<code>Git Bash Here</code>,输入：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> github ~/.ssh</span><br><span class="line">ssh -i ~/.ssh/github -T git@gitee.com</span><br></pre></td></tr></table></figure>输出：<code>Hi SPYFAMILY! You&#39;ve successfully authenticated, but GITEE.COM does not provide shell access.</code>即ssh连接成功。<div class="note info simple"><p>SSH自动选择密钥连接方法：<br>Git Bash输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">vi config</span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host github.<span class="keyword">com</span></span><br><span class="line">IdentityFile ~/.ssh/github</span><br></pre></td></tr></table></figure><p>保存并退出，尝试<code>ssh -T git@github.com</code>。</p></div></li></ul><h2 id="二、Hexo部署"><a href="#二、Hexo部署" class="headerlink" title="二、Hexo部署"></a>二、Hexo部署</h2><blockquote><p><a href="https://hexo.io/zh-cn/docs/one-command-deployment">Hexo官方文档部署</a></p></blockquote><h3 id="1-配置文件修改"><a href="#1-配置文件修改" class="headerlink" title="1.配置文件修改"></a>1.配置文件修改</h3><ul><li>在Hexo目录<code>F:\website\blog</code>下找到配置文件<code>_config.yml</code>并打开。在文件最下方：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> </span><br></pre></td></tr></table></figure></li><li>使用多个 deployer，Hexo 会依照顺序执行每个 deployer。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">    <span class="attr">repo:</span></span><br></pre></td></tr></table></figure></li><li>修改配置为：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;仓库地址&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">仓库分支</span>]</span><br></pre></td></tr></table></figure></li><li>仓库地址在仓库页面橙色按钮 <code>Code</code>处选择SSH，复制地址即可。仓库分支默认是<code>gh-pages</code>。例：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:SPYFAMILY/SPYFAMILY.git</span></span><br><span class="line">  <span class="attr">brach:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-生成-amp-部署-Hexo"><a href="#2-生成-amp-部署-Hexo" class="headerlink" title="2.生成 &amp; 部署 Hexo"></a>2.生成 &amp; 部署 Hexo</h3><ul><li>在Hexo目录<code>F:\website\blog</code>下打开Git Bash。初次部署需要安装 <code>hexo-deployer-git</code>。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>推送远程库前设置Git邮箱与用户名：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git config --global user.email xxx@example.com</span><br></pre></td></tr></table></figure></li><li>例如我的Github用户名是<code>SPYFAMILY</code>，邮箱就是注册邮箱：<a href="https://blog.csdn.net/czg13548930186/article/details/106202668">给Git配置邮箱和用户名的作用-种瓜大爷</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;SPYFAMILY&quot;</span></span><br><span class="line">git config --global user.email 77356+SPYFAMILY@user.gitee.com</span><br></pre></td></tr></table></figure></li><li>推送远程库命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>如果出现错误<code>ERROR Deployer not found: git</code>，是因为没有执行之前的<code>npm install hexo-deployer-git --save</code>。<br>如果出现错误<code>fatal: Not a git repository (or any of the parent directories): .git</code>，建议先重新执行一次推送命令。网上存在执行<code>git init</code>解决问题的说法，虽然雀食可行，但是<code>git init</code>会使整个工程的文件都会被推送（正常只推送public目录）。因为后续只复现过一次，那次执行了两次推送命令就解决了…</p></div></li><li>执行完后刷新仓库页面，即可看到推送的文件。Github Pages会自动更新，无需额外操作。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Hexo博客到Gitee Pages</title>
      <link href="/2022/04/16/%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E5%88%B0GiteePage/"/>
      <url>/2022/04/16/%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2%E5%88%B0GiteePage/</url>
      
        <content type="html"><![CDATA[<h1 id="部署Hexo博客到Gitee-Pages"><a href="#部署Hexo博客到Gitee-Pages" class="headerlink" title="部署Hexo博客到Gitee Pages"></a>部署Hexo博客到Gitee Pages</h1><details class="toggle" style="border: 1px solid #def1de"><summary class="toggle-button" style="background-color: #def1de;">更新日志</summary><div class="toggle-content"><p>2022-04-18：更新<code>更新日志</code>栏</p></div></details><div class="note warning flat"><p>墙裂建议使用Git Bash进行操作，毕竟是亲儿子，报错信息更准确详细。</p></div><h2 id="一、Gitee-Pages"><a href="#一、Gitee-Pages" class="headerlink" title="一、Gitee Pages"></a>一、Gitee Pages</h2><div class="note info flat"><p>1.首次进入Gitee Pages服务页面，会提示开通Gitee Pages服务需要进行实名认证。请准备好身份证正反面照片、手持身份证照片，预计一个工作日即可通过审核。<br>2.推荐一个国产软件<code>HBuilder X</code>,支持Md写作,也可以当作文本编辑器，其他功能大家可以自己研究一下。<a href="https://hx.dcloud.net.cn/">软件文档</a>、<a href="https://www.dcloud.io/hbuilderx.html">官方下载地址</a></p></div><h3 id="1-Gitee-Pages简单部署"><a href="#1-Gitee-Pages简单部署" class="headerlink" title="1.Gitee Pages简单部署"></a>1.Gitee Pages简单部署</h3><ul><li>参考官方文档即可<blockquote><p><a href="https://gitee.com/help/articles/4136#article-header0">Gitee Pages官方文档</a><br>官方文档重点关注下常见问题、Pages搭建之旅即可,测试html可直接从下面复制</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><h3 id="2-Gitee-SSH设置"><a href="#2-Gitee-SSH设置" class="headerlink" title="2.Gitee SSH设置"></a>2.Gitee SSH设置</h3><blockquote><p><a href="https://gitee.com/help/articles/4181#article-header0">Gitee生成/添加SSH公钥教程</a><br>如果官方教程<code>ssh -T git@gitee.com</code>显示<code>git@gitee.com: Permission denied (publickey).</code>参考下方解决。<br>这里推荐另外一种生成方式。使用MobaXterm的工具生成SSH公私钥。</p></blockquote><ul><li>在MobaXterm的工具栏中找到<code>Tools</code>，在<code>Tools</code>中选择<code>Network</code>部分的<code>MobaKeyGen(SSH key generator)</code></li><li>都默认选项即可，点击按钮<code>Generate</code>开始生成，鼠标在<code>Key</code>框内移动，产生更多随机数，加速生成密钥。</li><li>新建文本文档，命名为<code>xxx.pub</code>。例如：<code>SPYFAMILY.pub</code></li><li>MobaKeyGen生成结束后将<code>Public key for pasting into OpenSSH server(~/.ssh/aythorized_keys file):</code>框内的文本复制到<code>SPYFAMILY.pub</code>文件内，保存并退出。</li><li>选择菜单栏中的<code>Conversions</code>中的<code>Export OpenSSH key</code>保存私钥,跳出的Warning窗口选择<code>是</code>。将私钥文件保存到公钥文件相同目录下，命名与公钥文件相同即可。例如：<code>SPYFAMILY</code></li><li>公私钥生成完毕。按照官方教程添加到Gitee即可。</li><li>添加后在Git Bash输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>若显示<code>git@gitee.com: Permission denied (publickey).</code>，则进入保存密钥的位置，然后<code>Git Bash Here</code>,输入：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> SPYFAMILY ~/.ssh</span><br><span class="line">ssh -i ~/.ssh/SPYFAMILY -T git@gitee.com</span><br></pre></td></tr></table></figure>输出：<code>Hi SPYFAMILY! You&#39;ve successfully authenticated, but GITEE.COM does not provide shell access.</code>即ssh连接成功。<div class="note info simple"><p>SSH自动选择密钥连接方法：<br>Git Bash输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">vi config</span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host gitee.<span class="keyword">com</span></span><br><span class="line">IdentityFile ~/.ssh/SPYFAMILY</span><br></pre></td></tr></table></figure><p>保存并退出，尝试<code>ssh -T git@gitee.com</code>。</p></div></li></ul><h2 id="二、Hexo部署"><a href="#二、Hexo部署" class="headerlink" title="二、Hexo部署"></a>二、Hexo部署</h2><blockquote><p><a href="https://hexo.io/zh-cn/docs/one-command-deployment">Hexo官方文档部署</a></p></blockquote><h3 id="1-配置文件修改"><a href="#1-配置文件修改" class="headerlink" title="1.配置文件修改"></a>1.配置文件修改</h3><ul><li>在Hexo目录<code>F:\website\blog</code>下找到配置文件<code>_config.yml</code>并打开。在文件最下方：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> </span><br></pre></td></tr></table></figure></li><li>使用多个 deployer，Hexo 会依照顺序执行每个 deployer。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">    <span class="attr">repo:</span></span><br></pre></td></tr></table></figure></li><li>修改配置为：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;仓库地址&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">仓库分支</span>]</span><br></pre></td></tr></table></figure></li><li>仓库地址在仓库页面橙色按钮 <code>克隆/下载</code>处选择SSH，复制地址即可。仓库分支默认是<code>master</code>。例：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@gitee.com:SPYFAMILY/SPYFAMILY.git</span></span><br><span class="line">  <span class="attr">brach:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-生成-amp-部署-Hexo"><a href="#2-生成-amp-部署-Hexo" class="headerlink" title="2.生成 &amp; 部署 Hexo"></a>2.生成 &amp; 部署 Hexo</h3><ul><li>在Hexo目录<code>F:\website\blog</code>下打开Git Bash。初次部署需要安装 <code>hexo-deployer-git</code>。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>推送远程库前设置Git邮箱与用户名：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git config --global user.email xxx@example.com</span><br></pre></td></tr></table></figure></li><li>例如我的Gitee用户名是<code>SPYFAMILY</code>，邮箱就是注册邮箱，<a href="https://blog.csdn.net/czg13548930186/article/details/106202668">给Git配置邮箱和用户名的作用-种瓜大爷</a>。<div class="note info simple"><p>如果后续报有关邮箱的错误，可能与Gitee的个人设置中有一项邮箱管理有关。若勾选<code>不公开我的邮箱地址</code>，就需要使用Gitee生成的邮箱。如果还有错，就先关闭<code>禁止命令行推送暴露个人邮箱</code>，Git成功后再勾选。</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;SPYFAMILY&quot;</span></span><br><span class="line">git config --global user.email 77356+SPYFAMILY@user.gitee.com</span><br></pre></td></tr></table></figure></li><li>推送远程库命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>如果出现错误<code>ERROR Deployer not found: git</code>，是因为没有执行之前的<code>npm install hexo-deployer-git --save</code>。<br>如果出现错误<code>fatal: Not a git repository (or any of the parent directories): .git</code>，建议先重新执行一次推送命令。网上存在执行<code>git init</code>解决问题的说法，虽然雀食可行，但是<code>git init</code>会使整个工程的文件都会被推送（正常只推送public目录）。因为后续只复现过一次，那次执行了两次推送命令就解决了…</p></div></li><li>执行完后刷新仓库页面，即可看到推送的文件。后续按照<a href="https://gitee.com/help/articles/4136#article-header0">Gitee Pages官方文档</a>进行Gitee Pages的更新即可。每次推送完后都需要更新Gitee Pages才能重新部署运行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows搭建Hexo博客</title>
      <link href="/2022/04/16/Windows%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/04/16/Windows%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows搭建Hexo博客"><a href="#Windows搭建Hexo博客" class="headerlink" title="Windows搭建Hexo博客"></a>Windows搭建Hexo博客</h1><details class="toggle" style="border: 1px solid #def1de"><summary class="toggle-button" style="background-color: #def1de;">更新日志</summary><div class="toggle-content"><p>2022-04-18：更新<code>更新日志</code>栏</p></div></details><div class="note warning flat"><ol><li>   建议首先安装Git，后续命令行操作均由Git Bash完成，经常使用Bash的话手感更佳。使用CMD应该也行，后续出现问题建议换Bash重新执行一遍。对比两者报错，善用搜索引擎。</li><li>   不建议使用其他命令行工具，例如：MobaXterm。因为ssh过于顺手，直接用它执行命令，出错了至今未解决。哭。用了也没事，出错了Git Bash一下。</li><li>   如果出现Git、MobaXterm无法读取更新后的Windows环境变量，例如：提示无此命令，建议先试试以管理员方式打开。（因为Git、Nodejs基本都是安装自动添加环境变量的）</li></ol></div><h2 id="一、Git的安装与自定义选项（语言）"><a href="#一、Git的安装与自定义选项（语言）" class="headerlink" title="一、Git的安装与自定义选项（语言）"></a>一、Git的安装与自定义选项（语言）</h2><h3 id="1-Git的安装"><a href="#1-Git的安装" class="headerlink" title="1.Git的安装"></a>1.Git的安装</h3><blockquote><p><a href="https://git-scm.com/download/win">Git官方下载地址</a><br><a href="https://blog.csdn.net/weixin_44486583/article/details/122704375">Git的安装教程-头秃怎么办</a><br>按照安装教程来即可，安装过程中的特殊选项可按照个人喜好勾选。</p></blockquote><h3 id="2-Git的自定义选项（语言）"><a href="#2-Git的自定义选项（语言）" class="headerlink" title="2.Git的自定义选项（语言）"></a>2.Git的自定义选项（语言）</h3><ul><li>打开Git Bash。各种方式都行，例如：在桌面空白处单击鼠标右键，选择<strong>Git Bash Here</strong>。</li><li>在菜单栏或者左上角图标处单击鼠标右键，选择<strong>Options…</strong></li><li>选择左侧列表中的<strong>Window</strong>，在右边选项处可见<strong>UI language</strong></li><li>选择下拉框，选择最下方的<strong>zh_CN</strong>,重启Git Bash即可</li><li>后续可继续进入<strong>选项（Options…）</strong>，进行自定义设置</li></ul><h2 id="二、Nodejs的安装"><a href="#二、Nodejs的安装" class="headerlink" title="二、Nodejs的安装"></a>二、Nodejs的安装</h2><blockquote><p><a href="http://nodejs.cn/download/">Nodejs官方下载地址</a><br><a href="https://blog.csdn.net/qq_48485223/article/details/122709354">Nodejs安装教程-彭佼</a></p></blockquote><div class="note info flat"><p>彭佼大佬的教程十分详细，包括了安装、设置全局模块下载路径、更换npm源、基于淘宝源的cnpm全局安装（从入门到入土）。直接冲即可。</p></div><h2 id="三、搭建Hexo博客"><a href="#三、搭建Hexo博客" class="headerlink" title="三、搭建Hexo博客"></a>三、搭建Hexo博客</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><ul><li><p>一键安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>进阶安装和使用（还是直接一键安装吧，省心）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ul><li><code>npm install hexo</code></li><li><code>echo &#39;PATH=&quot;$PATH:./node_modules/.bin&quot;&#39; &gt;&gt; ~/.profile</code><br>第二种方法将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量中,后续可直接使用 <code>hexo &lt;command&gt;</code>：</li></ul></li></ul><h3 id="2-搭建博客"><a href="#2-搭建博客" class="headerlink" title="2.搭建博客"></a>2.搭建博客</h3><ul><li><p>打开资源管理器，进入你想要安装Hexo博客的目录。例如：把博客文件放入<code>F:\website\blog</code>，那就进入<code>F:\website</code>进行后续操作</p></li><li><p>在目录空白处单击鼠标右键，选择<strong>Git Bash Here</strong>。打开Git Bash。</p></li><li><p>初始化Hexo博客，在Git Bash中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>按照博客文件存放地址为<code>F:\website\blog</code>，那就在Git Bash中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li><li><p>验证博客能否正常运行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如果没有问题，<code>hexo s</code>执行完后会显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:4000</code>即可见到初始的Hexo界面</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
